@using  Bangazon.Models.OrderViewModels
@model Bangazon.Models.OrderViewModels.OrderDetailViewModel
@{
    ViewData["Title"] = "Details";
}
<h2 class="alert-danger">@TempData["OutOfStock"]</h2>
@if (Model.Order.DateCompleted == null)
{<h1>Shopping Cart</h1>}
<div>
    <h4>Order # @Html.DisplayFor(model => model.Order.OrderId)</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.DateCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.DateCreated)
        </dd>
        @if (Model.Order.DateCompleted != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Order.DateCompleted)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Order.DateCompleted)
            </dd>
        }
        @*<dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Order.DateCompleted)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Order.DateCompleted)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Order.User)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Order.User.Id)
            </dd>*@
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.PaymentType)
        </dt>
        @if (Model.Order.PaymentTypeId == null)
        {
            <dd class="col-sm-10">
                <a asp-action="Edit" asp-route-id="@Model.Order.OrderId">Add Payment</a>
            </dd>
        }
        else
        {
            <dd class="col-sm-10">
                @*@Html.DisplayFor(model => model.Order.PaymentType.PaymentDetails)*@
            </dd>
        }
    </dl>
</div>
<table class="table table-striped">
    <thead class="thead-dark">
        <tr>
            <th>
                Product Name
            </th>
            <th>
                Description
            </th>
            <th>
                Unit Price
            </th>
            <th>
                Number of Units
            </th>
            <th>
                Total Price
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (OrderLineItem item in Model.LineItems)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => item.Product.Title)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Product.Description)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Product.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Units)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost)
                </td>
                <td>
                    @*<a asp-action="Delete" asp-route-id="@item.Product.">Delete</a>*@
                    @if (Model.Order.PaymentTypeId == null)
                    {
                        <form asp-action="Delete">
                            <input type="hidden" asp-for="@item.Product.OrderProducts.First().OrderProductId" />
                            <input type="submit" value="Delete" class="btn btn-danger" />
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
    <h3>Total Cart Price:</h3>
</table>
<h4>
    Total Order Cost: $@Math.Round(Model.LineItems.Sum(m => m.Cost), 2, MidpointRounding.ToEven)
</h4>
@if (Model.Order.DateCompleted == null)
{
    <form asp-action="DeleteOrder">
        <input type="hidden" asp-for="LineItems.First().Product.OrderProducts.First().OrderId" />
        <input type="submit" value="Delete" class="btn btn-danger" />
    </form>
}
@*<div>
        <a asp-action="Edit" asp-route-id="@Model.Order.OrderId">Edit</a>
        <a asp-action="Index">Back to List</a>
    </div>*@